{"ast":null,"code":"import _slicedToArray from \"/Users/fuldenbeytur/QuoteWebsite/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/fuldenbeytur/QuoteWebsite/src/components/QuotePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport QuoteList from \"./QuoteList\";\nimport \"../app.css\";\n\nfunction QuotePage(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        quotes = _useState2[0],\n        setQuotes = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        query = _useState4[0],\n        setQuery = _useState4[1]; // const [favQuotes, setFavQuotes] = useState([]);\n  // const [addedFav, setAddedFav] = useState(false);\n\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        message = _useState6[0],\n        setMessage = _useState6[1];\n\n  useEffect(() => {\n    randomQuotes();\n  }, []); // function addFav(id) {\n  //   quotes.map(quote => {\n  //     //suppose to update\n  //     if (quote.id === id) setAddedFav(!addedFav);\n  //   });\n  //   console.log(addedFav);\n  //   console.log(id);\n  //   console.log(\"hello\");\n  // }\n\n  const handleChange = event => {\n    setQuery(event.target.value);\n    console.log(query);\n  };\n\n  function randomQuotes(event) {\n    const searchUrl = \"https://favqs.com/api/quotes\";\n    fetch(searchUrl, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Token token=7783d6594bc1a980728e246aa4dc044f\"\n      }\n    }).then(results => {\n      return results.json();\n    }).then(res => {\n      const resultNotFoundMsg = !res.quotes.length ? \"there are no more search result.\" : \"\";\n      setQuotes(res.quotes);\n      setMessage(resultNotFoundMsg);\n      console.log(res.quotes);\n      console.log(message);\n    }).catch(error => {\n      if (error) {\n        setMessage(\"Failed to fetch data.\");\n      }\n    });\n  }\n\n  function fetchSearchByWord(event) {\n    console.log(query);\n    const searchUrl = \"https://favqs.com/api/quotes/?filter=\" + query;\n    console.log(searchUrl);\n    fetch(searchUrl, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Token token=7783d6594bc1a980728e246aa4dc044f\"\n      }\n    }).then(results => {\n      return results.json();\n    }).then(res => {\n      const resultNotFoundMsg = !res.quotes.length ? \"there are no more search result.\" : \"\";\n      setQuotes(res.quotes);\n      setMessage(resultNotFoundMsg);\n      console.log(res.quotes);\n    }).catch(error => {\n      if (error) {\n        setMessage(\"Failed to fetch data.\");\n      }\n    });\n  }\n\n  function fetchSearchByAuthor(event) {\n    console.log(query);\n    const searchUrl = \"https://favqs.com/api/quotes/?filter=\" + query + \"&type=author\";\n    console.log(searchUrl);\n    fetch(searchUrl, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Token token=7783d6594bc1a980728e246aa4dc044f\"\n      }\n    }).then(results => {\n      return results.json();\n    }).then(res => {\n      const resultNotFoundMsg = !res.quotes.length ? \"there are no more search result.\" : \"\";\n      setQuotes(res.quotes);\n      setMessage(resultNotFoundMsg);\n      console.log(res.quotes);\n    }).catch(error => {\n      if (error) {\n        setMessage(\"Failed to fetch data.\");\n      }\n    });\n  }\n\n  return React.createElement(\"section\", {\n    className: \"quotes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"input\",\n    type: \"text\",\n    placeholder: \"Type a word or author\",\n    onChange: handleChange,\n    value: props.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"searchquote\",\n    onClick: fetchSearchByWord,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Search by Word\"), React.createElement(\"button\", {\n    className: \"searchauthor\",\n    onClick: fetchSearchByAuthor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Search by Author\")), React.createElement(QuoteList, {\n    quotes: quotes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }));\n}\n\nexport default QuotePage;","map":{"version":3,"sources":["/Users/fuldenbeytur/QuoteWebsite/src/components/QuotePage.js"],"names":["React","useState","useEffect","QuoteList","QuotePage","props","quotes","setQuotes","query","setQuery","message","setMessage","randomQuotes","handleChange","event","target","value","console","log","searchUrl","fetch","method","headers","Authorization","then","results","json","res","resultNotFoundMsg","length","catch","error","fetchSearchByWord","fetchSearchByAuthor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport QuoteList from \"./QuoteList\";\nimport \"../app.css\";\n\nfunction QuotePage(props) {\n  const [quotes, setQuotes] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  // const [favQuotes, setFavQuotes] = useState([]);\n  // const [addedFav, setAddedFav] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    randomQuotes();\n  }, []);\n\n  // function addFav(id) {\n  //   quotes.map(quote => {\n  //     //suppose to update\n  //     if (quote.id === id) setAddedFav(!addedFav);\n  //   });\n\n  //   console.log(addedFav);\n  //   console.log(id);\n  //   console.log(\"hello\");\n  // }\n\n  const handleChange = event => {\n    setQuery(event.target.value);\n    console.log(query);\n  };\n\n  function randomQuotes(event) {\n    const searchUrl = \"https://favqs.com/api/quotes\";\n\n    fetch(searchUrl, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Token token=7783d6594bc1a980728e246aa4dc044f\"\n      }\n    })\n      .then(results => {\n        return results.json();\n      })\n      .then(res => {\n        const resultNotFoundMsg = !res.quotes.length\n          ? \"there are no more search result.\"\n          : \"\";\n        setQuotes(res.quotes);\n        setMessage(resultNotFoundMsg);\n\n        console.log(res.quotes);\n        console.log(message);\n      })\n      .catch(error => {\n        if (error) {\n          setMessage(\"Failed to fetch data.\");\n        }\n      });\n  }\n\n  function fetchSearchByWord(event) {\n    console.log(query);\n    const searchUrl = \"https://favqs.com/api/quotes/?filter=\" + query;\n    console.log(searchUrl);\n\n    fetch(searchUrl, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Token token=7783d6594bc1a980728e246aa4dc044f\"\n      }\n    })\n      .then(results => {\n        return results.json();\n      })\n      .then(res => {\n        const resultNotFoundMsg = !res.quotes.length\n          ? \"there are no more search result.\"\n          : \"\";\n        setQuotes(res.quotes);\n        setMessage(resultNotFoundMsg);\n\n        console.log(res.quotes);\n      })\n      .catch(error => {\n        if (error) {\n          setMessage(\"Failed to fetch data.\");\n        }\n      });\n  }\n\n  function fetchSearchByAuthor(event) {\n    console.log(query);\n    const searchUrl =\n      \"https://favqs.com/api/quotes/?filter=\" + query + \"&type=author\";\n    console.log(searchUrl);\n\n    fetch(searchUrl, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Token token=7783d6594bc1a980728e246aa4dc044f\"\n      }\n    })\n      .then(results => {\n        return results.json();\n      })\n      .then(res => {\n        const resultNotFoundMsg = !res.quotes.length\n          ? \"there are no more search result.\"\n          : \"\";\n        setQuotes(res.quotes);\n        setMessage(resultNotFoundMsg);\n\n        console.log(res.quotes);\n      })\n      .catch(error => {\n        if (error) {\n          setMessage(\"Failed to fetch data.\");\n        }\n      });\n  }\n\n  return (\n    <section className=\"quotes\">\n      <div className=\"search\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Type a word or author\"\n          onChange={handleChange}\n          value={props.value}\n        />\n        <button className=\"searchquote\" onClick={fetchSearchByWord}>\n          Search by Word\n        </button>\n        <button className=\"searchauthor\" onClick={fetchSearchByAuthor}>\n          Search by Author\n        </button>\n        {/* <button className=\"favButton\">Favorites</button> */}\n      </div>\n\n      <QuoteList quotes={quotes} />\n    </section>\n  );\n}\n\nexport default QuotePage;\n"]},"metadata":{},"sourceType":"module"}