{"ast":null,"code":"var _jsxFileName = \"/Users/fuldenbeytur/Desktop/QuotesWebsite/src/components/QuoteList.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../app.css\"; // import { Link } from \"react-router-dom\";\n\nfunction QuoteList(props) {\n  return React.createElement(\"div\", {\n    className: \"quotePage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Which quote you would like to look for?\"), React.createElement(\"div\", {\n    className: \"quotelist\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.quotes.map(quote => {\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      key: quote.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, quote.body, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), \" \", React.createElement(\"span\", {\n      className: \"authorName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, quote.author, \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    })));\n  })));\n}\n\nQuoteList.propTypes = {\n  quotes: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    body: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired\n  })).isRequired\n}; // QuoteList.defaultProps = {\n//   quotes: []\n// };\n\nexport default QuoteList;","map":{"version":3,"sources":["/Users/fuldenbeytur/Desktop/QuotesWebsite/src/components/QuoteList.js"],"names":["React","PropTypes","QuoteList","props","quotes","map","quote","id","body","author","propTypes","arrayOf","shape","number","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,YAAP,C,CAEA;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADF,EAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBC,KAAK,IAAI;AACzB,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KAAK,CAACE,IADT,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,OAES;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BF,KAAK,CAACG,MAApC,MAFT,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,CADF;AASD,GAVA,CADH,CAFF,CADF;AAkBD;;AAEDP,SAAS,CAACQ,SAAV,GAAsB;AACpBN,EAAAA,MAAM,EAAEH,SAAS,CAACU,OAAV,CACNV,SAAS,CAACW,KAAV,CAAgB;AACdL,IAAAA,EAAE,EAAEN,SAAS,CAACY,MAAV,CAAiBC,UADP;AAEdN,IAAAA,IAAI,EAAEP,SAAS,CAACc,MAAV,CAAiBD,UAFT;AAGdL,IAAAA,MAAM,EAAER,SAAS,CAACc,MAAV,CAAiBD;AAHX,GAAhB,CADM,EAMNA;AAPkB,CAAtB,C,CAUA;AACA;AACA;;AAEA,eAAeZ,SAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../app.css\";\n\n// import { Link } from \"react-router-dom\";\n\nfunction QuoteList(props) {\n  return (\n    <div className=\"quotePage\">\n      <h3>Which quote you would like to look for?</h3>\n      <div className=\"quotelist\">\n        {props.quotes.map(quote => {\n          return (\n            <div className=\"content\">\n              <p key={quote.id}>\n                {quote.body}\n                <br /> <span className=\"authorName\">{quote.author} </span>\n                <br />\n              </p>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nQuoteList.propTypes = {\n  quotes: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      body: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired\n    })\n  ).isRequired\n};\n\n// QuoteList.defaultProps = {\n//   quotes: []\n// };\n\nexport default QuoteList;\n"]},"metadata":{},"sourceType":"module"}