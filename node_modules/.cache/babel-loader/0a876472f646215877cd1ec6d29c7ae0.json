{"ast":null,"code":"import _objectSpread from \"/Users/fuldenbeytur/QuoteWebsite/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/fuldenbeytur/QuoteWebsite/src/components/UsersQuoteList.js\";\nimport React from \"react\";\nimport QuoteForm from \"./QuoteForm\";\nimport UserQuote from \"./UserQuote\";\n\nclass UsersQuoteList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quotes: [],\n      quoteToShow: \"all\"\n    };\n\n    this.addQuote = quote => {\n      this.setState(state => ({\n        quotes: [quote, ...state.quotes]\n      }));\n    };\n\n    this.toggleFavorite = id => {\n      this.setState({\n        quotes: this.state.quotes.map(quote => {\n          //suppose to update\n          if (quote.id === id) {\n            return _objectSpread({}, quote, {\n              favorite: !quote.favorite\n            });\n          } else {\n            return quote;\n          }\n        })\n      });\n    };\n\n    this.updateQuoteShow = x => {\n      this.setState({\n        quoteToShow: x\n      });\n    };\n\n    this.handleDeleteQuote = id => {\n      this.setState({\n        quotes: this.state.quotes.filter(quote => quote.id !== id)\n      });\n    };\n\n    this.removeAllQuotes = id => {\n      this.setState({\n        quotes: this.state.quotes.filter(quote => quote.id !== id && quote.id === id)\n      });\n    };\n\n    this.removeNonFavorites = () => {\n      this.setState(state => ({\n        quotes: state.quotes.filter(quote => quote.favorite)\n      }));\n    };\n  }\n\n  render() {\n    let quotes = [];\n\n    if (this.state.quoteToShow === \"all\") {\n      quotes = this.state.quotes;\n    } else if (this.state.quoteToShow === \"favorites\") {\n      quotes = this.state.quotes.filter(quote => quote.favorite);\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(QuoteForm, {\n      onSubmit: this.addQuote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), quotes.map(quote => React.createElement(UserQuote, {\n      key: quote.id,\n      onFav: () => this.toggleFavorite(quote.id),\n      onDelete: () => this.handleDeleteQuote(quote.id),\n      quote: quote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.updateQuoteShow(\"all\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"All\"), React.createElement(\"button\", {\n      onClick: () => this.updateQuoteShow(\"favorites\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Favorites\"), this.state.quotes.filter(quote => quote).length ? React.createElement(\"button\", {\n      onClick: this.removeAllQuotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Remove All\") : null, this.state.quotes.filter(quote => quote.favorite).length ? React.createElement(\"button\", {\n      onClick: this.removeNonFavorites,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Rem NonFavorites\") : null));\n  }\n\n}\n\nexport default UsersQuoteList;","map":{"version":3,"sources":["/Users/fuldenbeytur/QuoteWebsite/src/components/UsersQuoteList.js"],"names":["React","QuoteForm","UserQuote","UsersQuoteList","Component","state","quotes","quoteToShow","addQuote","quote","setState","toggleFavorite","id","map","favorite","updateQuoteShow","x","handleDeleteQuote","filter","removeAllQuotes","removeNonFavorites","render","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport QuoteForm from \"./QuoteForm\";\nimport UserQuote from \"./UserQuote\";\n\nclass UsersQuoteList extends React.Component {\n  state = {\n    quotes: [],\n    quoteToShow: \"all\"\n  };\n\n  addQuote = quote => {\n    this.setState(state => ({\n      quotes: [quote, ...state.quotes]\n    }));\n  };\n\n  toggleFavorite = id => {\n    this.setState({\n      quotes: this.state.quotes.map(quote => {\n        //suppose to update\n        if (quote.id === id) {\n          return {\n            ...quote,\n            favorite: !quote.favorite\n          };\n        } else {\n          return quote;\n        }\n      })\n    });\n  };\n\n  updateQuoteShow = x => {\n    this.setState({\n      quoteToShow: x\n    });\n  };\n\n  handleDeleteQuote = id => {\n    this.setState({\n      quotes: this.state.quotes.filter(quote => quote.id !== id)\n    });\n  };\n\n  removeAllQuotes = id => {\n    this.setState({\n      quotes: this.state.quotes.filter(\n        quote => quote.id !== id && quote.id === id\n      )\n    });\n  };\n\n  // removeNonFavorites = () => {\n  //   this.setState({\n  //     quotes: this.state.quotes.filter(quote => quote.favorite)\n  //   });\n  // };\n\n  //state passed as a parameter\n  removeNonFavorites = () => {\n    this.setState(state => ({\n      quotes: state.quotes.filter(quote => quote.favorite)\n    }));\n  };\n\n  render() {\n    let quotes = [];\n\n    if (this.state.quoteToShow === \"all\") {\n      quotes = this.state.quotes;\n    } else if (this.state.quoteToShow === \"favorites\") {\n      quotes = this.state.quotes.filter(quote => quote.favorite);\n    }\n\n    return (\n      <>\n        <QuoteForm onSubmit={this.addQuote} />\n        {quotes.map(quote => (\n          <UserQuote\n            key={quote.id}\n            onFav={() => this.toggleFavorite(quote.id)}\n            onDelete={() => this.handleDeleteQuote(quote.id)}\n            quote={quote}\n          />\n        ))}\n        <div className=\"search\">\n          <button onClick={() => this.updateQuoteShow(\"all\")}>All</button>\n          <button onClick={() => this.updateQuoteShow(\"favorites\")}>\n            Favorites\n          </button>\n          {this.state.quotes.filter(quote => quote).length ? (\n            <button onClick={this.removeAllQuotes}>Remove All</button>\n          ) : null}\n          {this.state.quotes.filter(quote => quote.favorite).length ? (\n            <button onClick={this.removeNonFavorites}>Rem NonFavorites</button>\n          ) : null}\n          {/* <div className=\"favnum\">\n            Favorite Quotes:{\" \"}\n            {this.state.quotes.filter(quote => quote.favorite).length}\n          </div> */}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UsersQuoteList;\n"]},"metadata":{},"sourceType":"module"}